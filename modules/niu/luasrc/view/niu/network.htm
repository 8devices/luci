<%
local dsp = require "luci.dispatcher"
local utl = require "luci.util"
local uci = require "luci.model.uci"

local nws = {}
uci.inst_state:foreach("network", "interface", function(s)
	nws[#nws+1] = s
end)

if uci.inst_state:get("network", "lan", "_ipchanged") and
uci.inst_state:revert("network", "lan", "_ipchanged") then
	include("niu/network/warn_ip_change")
end
%>

<div>Status:</div>
<table>
<% 
for _, v in ipairs(nws) do if v[".name"] ~= "loopback" then
%>
<tr><td><%=v[".name"]%></td><td><%=v.ipaddr%></td></tr>
<% end end %>
</table>
<br />
<ul>
<%
local nodes = dsp.node("niu", "network").nodes
local function cmp(a, b)
	return (nodes[a].order or 100) < (nodes[b].order or 100)
end
for k, v in utl.spairs(nodes, cmp) do
%>
<li><a href="<%=dsp.build_url("niu", "network", k)%>"><%=v.title%></a></li>
<%
end
%>
</ul>